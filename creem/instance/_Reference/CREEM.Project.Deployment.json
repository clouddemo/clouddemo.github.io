{
    "creemDeployment": {
        "@version": "0.0.1",
        "@lang": "en-US",
        
        "project": {
            "systemConfiguration": {
                    "fileName" : "CREEM.SystemConfiguration.xml",
                    "base64": ""
                },
            "workflows": [
                {
                    "fileName" : "CREEM.Workflow.1.xml",
                    "base64": ""
                },
                {
                    "fileName" : "CREEM.Workflow.2.xml",
                    "base64": ""
                }
            ],
            "functionBlocks": [
                {
                    "id" : "Atlas.TorqueWrenchSkill.ScrewFastening",
                    "fileName" : "Atlas.TorqueWrenchSkill.ScrewFastening.py",
                    "base64": ""
                },
                {
                    "id" : "Keyence.BarcodeSkill.ScanBarcode",
                    "fileName" : "Keyence.BarcodeSkill.ScanBarcode.py",
                    "base64": ""
                },
            ]
        }
    }
}