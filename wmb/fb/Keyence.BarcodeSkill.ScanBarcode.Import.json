{
    "creemOpenness": {
        "@version": "0.0.1",
        "@lang": "en-US",
        "items": [
            {
                "type": "FunctionBlock",
                "name": "AGVMove",
                "definitionBase64": "",
                "codeBase64": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLQpDb21tb24gUnVudGltZS1FbmdpbmVlcmluZyBFeGNoYW5nZSBNb2RlbCAoQ1JFRU0pCkNvcHlyaWdodCDCqSAyMDIxIFNpZW1lbnMgQUcuIEFkdmFudGEuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogKiBTaWVtZW5zIEFHLiBNSVQgTGljZW5zZSAxLjAKICoKICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24KICogb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24KICogZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dAogKiByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwKICogY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCiAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nCiAqIGNvbmRpdGlvbnM6CiAqIAogKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZQogKiBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsCiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUwogKiBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORAogKiBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVAogKiBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwKICogV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HCiAqIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKICogT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgoKQ29yZU5hbWVzcGFjZTogQ1JFRU0uU3lzdGVtQ29uZmlndXJhdGlvbi5JbnN0YW5jZQpDb250YWN0OiB6aGVuaHVhLnpob3VAc2llbWVucy5jb20KLS0+CjxjbTpDSU1JIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIAogICAgICAgICB4bWxuczpicz0iaHR0cDovL2NyZWVtLnNpZW1lbnMuY29tL3NjaGVtYXMvYmFzZSIgCiAgICAgICAgIHhtbG5zOmNpbT0iaHR0cDovL2NyZWVtLnNpZW1lbnMuY29tL3NjaGVtYXMvY2ltIiAKICAgICAgICAgeG1sbnM6Y209Imh0dHA6Ly9jcmVlbS5zaWVtZW5zLmNvbS9zY2hlbWFzL2NyZWVtIgogICAgICAgICB4bWxucz0iaHR0cDovL2NyZWVtLnNpZW1lbnMuY29tL3NjaGVtYXMvY3JlZW0iCiAgICAgICAgIHN0YXRlPSJBbHBoYSIgdmVyc2lvbj0iMC4wLjEiIGxhbmc9ImVuLVVTIj4KCiAgICA8Y206U3lzdGVtQ29uZmlndXJhdGlvbj4KICAgICAgICA8Y206TWV0YWRhdGE+CiAgICAgICAgICAgIDxjbTpOYW1lc3BhY2U+U3lzdGVtQ29uZmlndXJhdGlvbi5TYW1wbGUuMTwvY206TmFtZXNwYWNlPgogICAgICAgICAgICA8Y206TmFtZT5TeXN0ZW1Db25maWd1cmF0aW9uLlNhbXBsZTwvY206TmFtZT4KICAgICAgICAgICAgPGNtOlZlcnNpb24+MS4wLjA8L2NtOlZlcnNpb24+CiAgICAgICAgICAgIDxjbTpEZXNjcmlwdGlvbi8+CiAgICAgICAgICAgIDxjbTpVVUlELz4KICAgICAgICAgICAgPGNtOkNlcnRpZmljYXRpb24vPgogICAgICAgICAgICA8Y206T3JnYW5pemF0aW9uLz4KICAgICAgICA8L2NtOk1ldGFkYXRhPgoKICAgICAgICA8Y206VUlJbmZvcm1hdGlvbi8+CgogICAgICAgIDxjbTpEYXRhPgogICAgICAgICAgICA8Y206Q29udGVudD4KICAgICAgICAgICAgICAgIDxjbTpEZXZpY2VUcmVlPgogICAgICAgICAgICAgICAgICAgIDxjbTpEREluc3RhbmNlIGlkPSJDb250cm9sbGVyLklQQy5Vbmtub3duLjEiPgogICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOkNvbW11bmljYXRpb24gaWQ9IkV0aGVybmV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJpcEFkZHJlc3MiIHZhbHVlPSIxMjcuMC4wLjEiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJwb3J0TnVtYmVyIiB2YWx1ZT0iMTAwMDAiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpQYXJlbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDaGlsZHJlbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDb21tdW5pY2F0aW9uIGlkPSJFdGhlcm5ldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOkRESW5zdGFuY2UgaWQ9IkNhbWVyYS4yRC5Vbmtub3duLjEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOkNvbW11bmljYXRpb24gaWQ9IkV0aGVybmV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJpcEFkZHJlc3MiIHZhbHVlPSIxOTIuMTY4LjAuMSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpQYXJhbWV0ZXIgaWQ9InBvcnROdW1iZXIiIHZhbHVlPSIyMDAwMCIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpDb21tdW5pY2F0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NtOlBhcmVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NtOkRESW5zdGFuY2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOkRESW5zdGFuY2UgaWQ9IlJvYm90aWMuQ29ib3QuVW5pdmVyc2FsUm9ib3RzLlVSNS4xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDb21tdW5pY2F0aW9uIGlkPSJFdGhlcm5ldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmFtZXRlciBpZD0iaXBBZGRyZXNzIiB2YWx1ZT0iMTkyLjE2OC4wLjIiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJwb3J0TnVtYmVyIiB2YWx1ZT0iMjAwMDAiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpQYXJlbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDaGlsZHJlbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDb21tdW5pY2F0aW9uIGlkPSJJTyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOkRESW5zdGFuY2UgaWQ9IkdyaXBwZXIuU2NodW5rLjg1LjEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOkNvbW11bmljYXRpb24gaWQ9IklPIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJpb1R5cGUiIHZhbHVlPSJETyIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpQYXJhbWV0ZXIgaWQ9InBvcnROYW1lIiB2YWx1ZT0iSTYsSTciLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpQYXJlbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpEREluc3RhbmNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpDb21tdW5pY2F0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NtOkNoaWxkcmVuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206RERJbnN0YW5jZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDb21tdW5pY2F0aW9uIGlkPSJVU0IiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpEREluc3RhbmNlIGlkPSJCYXJjb2RlU2Nhbm5lci5LZXllbmNlLlMyMDAwLjEiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpDaGlsZHJlbj4KICAgICAgICAgICAgICAgICAgICA8L2NtOkRESW5zdGFuY2U+CiAgICAgICAgICAgICAgICAgICAgPGNtOkRESW5zdGFuY2UgaWQ9IkNvbnRyb2xsZXIuUExDLlVua25vd24uMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDaGlsZHJlbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDb21tdW5pY2F0aW9uIGlkPSJJTyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOkRESW5zdGFuY2UgaWQ9IkJ1dHRvbi5QdXNoQnV0dG9uLlVua25vd24uMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpQYXJlbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206Q29tbXVuaWNhdGlvbiBpZD0iSU8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpQYXJhbWV0ZXIgaWQ9ImlvVHlwZSIgdmFsdWU9IkRJIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmFtZXRlciBpZD0icG9ydE5hbWUiIHZhbHVlPSJJOS4xIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NtOkNvbW11bmljYXRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206UGFyZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206RERJbnN0YW5jZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206RERJbnN0YW5jZSBpZD0iQnV0dG9uLlB1c2hCdXR0b24uVW5rbm93bi4yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDb21tdW5pY2F0aW9uIGlkPSJJTyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmFtZXRlciBpZD0iaW9UeXBlIiB2YWx1ZT0iREkiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJwb3J0TmFtZSIgdmFsdWU9Ikk5LjIiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpQYXJlbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpEREluc3RhbmNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpEREluc3RhbmNlIGlkPSJMRUQuVW5rbm93bi4xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbTpDb21tdW5pY2F0aW9uIGlkPSJJTyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmFtZXRlciBpZD0iaW9UeXBlIiB2YWx1ZT0iRE8iLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJwb3J0TmFtZSIgdmFsdWU9IlEzLjIiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpQYXJlbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpEREluc3RhbmNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpDb21tdW5pY2F0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L2NtOkNoaWxkcmVuPgogICAgICAgICAgICAgICAgICAgIDwvY206RERJbnN0YW5jZT4KICAgICAgICAgICAgICAgIDwvY206RGV2aWNlVHJlZT4KICAgICAgICAgICAgPC9jbTpDb250ZW50PgogICAgICAgIDwvY206RGF0YT4KCiAgICAgICAgPGNtOlJlc291cmNlLz4KICAgIDwvY206U3lzdGVtQ29uZmlndXJhdGlvbj4KICAgIAo8L2NtOkNJTUk+",
                "UI": {
                    "base64": "",
                    "iframe": {
                        "url": "http://localhost:5000/index.html",
                        "style": "{width: 500, height: 400}"
                    }
                }
            },
            {
                "type": "FunctionBlock",
                "name": "FTControlDetectMove",
                "definitionBase64": "",
                "codeBase64": "",
                "UI": {
                    "iframe": {
                        "url": "http://localhost:5000/index.html",
                        "style": "{width: 500, height: 400}"
                    }
                }
            },
            {
                "type": "Device",
                "name": "AGV",
                "definitionBase64": ""
                "UI": {
                    "base64": "",
                    "iframe": {
                        "url": "http://localhost:5000/index.html",
                        "style": "{width: 500, height: 400}"
                    }
                }
            }
        ]
    }
}
