{
    "creemOpenness": {
        "@version": "0.0.1",
        "@lang": "en-US",
        "items": [
            {
                "type": "FunctionBlock",
                "name": "Atlas.TorqueWrenchSkill.ScrewFastening",
                "definitionBase64": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLQpDb21tb24gUnVudGltZS1FbmdpbmVlcmluZyBFeGNoYW5nZSBNb2RlbCAoQ1JFRU0pCkNvcHlyaWdodCDCqSAyMDIxIFNpZW1lbnMgQUcuIEFkdmFudGEuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogKiBTaWVtZW5zIEFHLiBNSVQgTGljZW5zZSAxLjAKICoKICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24KICogb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24KICogZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dAogKiByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwKICogY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCiAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nCiAqIGNvbmRpdGlvbnM6CiAqIAogKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZQogKiBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsCiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUwogKiBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORAogKiBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVAogKiBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwKICogV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HCiAqIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKICogT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgotLT4KPGNtOkNJTUkgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6YnM9Imh0dHA6Ly9jcmVlbS5zaWVtZW5zLmNvbS9zY2hlbWFzL2Jhc2UiIHhtbG5zOmNpbT0iaHR0cDovL2NyZWVtLnNpZW1lbnMuY29tL3NjaGVtYXMvY2ltIiB4bWxuczpjbT0iaHR0cDovL2NyZWVtLnNpZW1lbnMuY29tL3NjaGVtYXMvY3JlZW0iIHhtbG5zPSJodHRwOi8vY3JlZW0uc2llbWVucy5jb20vc2NoZW1hcy9jcmVlbSIgc3RhdGU9IkFscGhhIiB2ZXJzaW9uPSIwLjAuMSIgbGFuZz0iZW4tVVMiPgoJPCEtLSBOYW1lIHRoZSBpZCBvZiB0aGUgRkIgYnkgTmFtZXNwYWNlIGZvcm1hdCBNYW51ZmFjdHVyZXIuQ2F0ZWdvcnkuRkJOYW1lIC0tPgoJPGNtOkZ1bmN0aW9uQmxvY2sgaWQ9IkF0bGFzLlRvcnF1ZVdyZW5jaFNraWxsLlNjcmV3RmFzdGVuaW5nIj4KCQk8Y206TWV0YWRhdGE+CgkJCTxjbTpOYW1lc3BhY2U+Q1JFRU0uRkIue2lkfTwvY206TmFtZXNwYWNlPgoJCQk8Y206TmFtZXNwYWNlVVJJLz4KCQkJPGNtOk5hbWU+U2NyZXdGYXN0ZW5pbmc8L2NtOk5hbWU+CgkJCTxjbTpWZXJzaW9uPjEuMC4wPC9jbTpWZXJzaW9uPgoJCQk8Y206RGVzY3JpcHRpb24vPgoJCQk8IS0tICMjIyBHZW5lcmF0ZWQgYnkgQ1JFRU0gRWRpdG9yICMjIyAtLT4KCQkJPGNtOlVVSUQ+W1VVSUQsIGRvIG5vdCBjaGFuZ2UgdW5sZXNzIGNsaWNrIGdlbmVyYXRlIGJ1dHRvbiBhZ2Fpbl08L2NtOlVVSUQ+CgkJCTxjbTpPcmdhbml6YXRpb24+CgkJCQk8Y206T3JnYW5pemF0aW9uTmFtZT5TaWVtZW5zIEFHLjwvY206T3JnYW5pemF0aW9uTmFtZT4KCQkJCTwhLS0gIyMjIEdlbmVyYXRlZCBieSBDUkVFTSBFZGl0b3IgIyMjIC0tPgoJCQkJPGNtOkRpZ2l0YWxTaWduYXR1cmU+W1NIQS0yNTYgb2YgdGhpcyBmaWxlXTwvY206RGlnaXRhbFNpZ25hdHVyZT4KCQkJPC9jbTpPcmdhbml6YXRpb24+CgkJCTxjbTpDZXJ0aWZpY2F0aW9uLz4KCQk8L2NtOk1ldGFkYXRhPgoJCTxjbTpVSUluZm9ybWF0aW9uPgoJCQk8IS0tIElTTzYzOS1JU08zMTY2IC0tPgoJCQk8Y206Q29udGVudCBsYW5nPSJlbi1VUyI+CgkJCQk8Y206RGlzcGxheU5hbWU+U2NyZXcgRmFzdGVuaW5nPC9jbTpEaXNwbGF5TmFtZT4KCQkJCTxjbTpEZXNjcmlwdGlvbj5TY3JldyBmYXN0ZW5pbmcgdXNpbmcgQXRsYXMgdG9ycXVlIHdyZW5jaDwvY206RGVzY3JpcHRpb24+CgkJCQk8Y206SWNvbiByZWY9IlJlc291cmNlLmRlZmF1bHRJY29uIi8+CgkJCTwvY206Q29udGVudD4KCQkJPGNtOkNvbnRlbnQgbGFuZz0iemgtQ04iPgoJCQkJPGNtOkRpc3BsYXlOYW1lPuaLp+ieuuS4nTwvY206RGlzcGxheU5hbWU+CgkJCQk8Y206RGVzY3JpcHRpb24+55So6Zi/54m55ouJ5pav5omt55+p5omz5omL5oun6J665LidPC9jbTpEZXNjcmlwdGlvbj4KCQkJCTxjbTpJbnB1dD4KCQkJCQk8Y206UG9ydCBpZD0icHNldCIgZGlzcGxheU5hbWU9IuWPguaVsOe7hCIvPgoJCQkJPC9jbTpJbnB1dD4KCQkJCTxjbTpPdXRwdXQ+CgkJCQkJPGNtOlBvcnQgaWQ9InN0YXR1cyIgZGlzcGxheU5hbWU9IueKtuaAgeeggSIvPgoJCQkJPC9jbTpPdXRwdXQ+CgkJCTwvY206Q29udGVudD4KCQk8L2NtOlVJSW5mb3JtYXRpb24+CgkJPGNtOkRhdGE+CgkJCTxjbTpDb250ZW50PgoJCQkJPGNtOkV4ZWN1dG9yIGxvY2F0aW9uPSJ7aWR9LnB5Ii8+CgkJCQk8Y206Q2F0ZWdvcnkgdHlwZT0iTG9naWNhbE5vZGUiLz4KCQkJCTxjbTpQaHlzaWNhbE5vZGUgdHlwZT0iRGV2aWNlIj4KCQkJCQk8Y206RGV2aWNlRGVzY3JpcHRpb24gcmVmPSJUb3JxdWVXcmVuY2guQXRsYXMuUEY0MDAwIi8+CgkJCQkJPGNtOkRldmljZURlc2NyaXB0aW9uIHJlZj0iVG9ycXVlV3JlbmNoLkF0bGFzLlBGNjAwMCIvPgoJCQkJPC9jbTpQaHlzaWNhbE5vZGU+CgkJCQk8Y206SW5wdXQ+CgkJCQkJPGNtOlBvcnQgaWQ9InBzZXQiIHR5cGU9IlN0cmluZyIgZGVmYXVsdFZhbHVlPSIwMDIiLz4KCQkJCTwvY206SW5wdXQ+CgkJCQk8Y206T3V0cHV0PgoJCQkJCTxjbTpQb3J0IGlkPSJzdGF0dXMiIHR5cGU9IlN0YXR1c0NvZGUiLz4KCQkJCTwvY206T3V0cHV0PgoJCQk8L2NtOkNvbnRlbnQ+CgkJPC9jbTpEYXRhPgoJCTxjbTpSZXNvdXJjZT4KCQkJPCEtLSBQYXJzZSBiYXNlNjQgb2YgRkIgU1ZHIEljb24gaGVyZSwgb3RoZXJ3aXNlIGl0IHdpbGwgc2hvdyBkZWZhdWx0IEZCIGljb24gaW5zdGVhZCAtLT4KCQkJPGNtOkNvbnRlbnQgaWQ9IlJlc291cmNlLmRlZmF1bHRJY29uIiB0eXBlPSJJY29uIiBmb3JtYXQ9IlNWRyI+UEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaVZWUkdMVGdpUHo0S1BITjJaeUIzYVdSMGFEMGlNVEUyY0hnaUlHaGxhV2RvZEQwaU1URXljSGdpSUhacFpYZENiM2c5SWpBZ01DQXhNVFlnTVRFeUlpQjJaWEp6YVc5dVBTSXhMakVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUlnZUcxc2JuTTZlR3hwYm1zOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6RTVPVGt2ZUd4cGJtc2lQZ29nSUNBZ1BIUnBkR3hsUG5OamNtVjNMV1poYzNSbGJtbHVaend2ZEdsMGJHVStDaUFnSUNBOFp5QnBaRDBpYzJOeVpYY3RabUZ6ZEdWdWFXNW5JaUJ6ZEhKdmEyVTlJbTV2Ym1VaUlITjBjbTlyWlMxM2FXUjBhRDBpTVNJZ1ptbHNiRDBpYm05dVpTSWdabWxzYkMxeWRXeGxQU0psZG1WdWIyUmtJajRLSUNBZ0lDQWdJQ0E4WnlCcFpEMGljbVZ3WVdseWFXNW5MWE5sY25acFkyVWlJSFJ5WVc1elptOXliVDBpZEhKaGJuTnNZWFJsS0RndU1EQXdNREF3TENBMkxqQXdNREF3TUNraUlHWnBiR3c5SWlNd01EazVPVGtpSUdacGJHd3RjblZzWlQwaWJtOXVlbVZ5YnlJK0NpQWdJQ0FnSUNBZ0lDQWdJRHh3WVhSb0lHUTlJazA1T1M0Mk9EVTRPVGN4TERRMExqUTBPVEEyTXpRZ1F6azVMalV5T0RBME5UVXNORE11TURRek5UVXpOaUE1Tnk0NE9EZzFOVEF6TERReExqazROakUzTnpjZ09UWXVORGN3T1RFeU5TdzBNUzQ1T0RZeE56YzNJRU01TVM0NE9Ea3pNakUxTERReExqazROakUzTnpjZ09EY3VPREl6TWpNMU1Td3pPUzR5T1RjeE1UTXhJRGcyTGpFeE9EQXdORFVzTXpVdU1UTTFNRGMwTXlCRE9EUXVNemMzTXpFeE15d3pNQzQ0TnpNeE16WXhJRGcxTGpVd01EUXpOamdzTWpVdU9UQXpOamcySURnNExqa3hNemt5TlRRc01qSXVOemN5TWpFd01TQkRPRGt1T1RnNU1EUTJOeXd5TVM0M09Ea3lNVGd5SURrd0xqRXlNREE0TlRJc01qQXVNVFF6TWpVNE1TQTRPUzR5TVRnNE1UY3NNVGt1TURBd05qZzJPQ0JET0RZdU9EY3pNRGszTnl3eE5pNHdNakkzTXpVNUlEZzBMakl3T0RJeE5UUXNNVE11TXpNeU16Y3pPU0E0TVM0eU9UYzJPRGs0TERFeExqQXdNRGsxTnpVZ1F6Z3dMakUxT0RrNU5UUXNNVEF1TURnM05Ua3lOQ0EzT0M0ME9EVTNOamMxTERFd0xqSXhORGN6TmprZ056Y3VORGszTlRjeU9Dd3hNUzR6TURnME16azRJRU0zTkM0MU1UYzBNVGsxTERFMExqWXdPVEF3T1RNZ05qa3VNVFl6T0RZNE9Td3hOUzQ0TXpVME56ZzNJRFkxTGpBeU5qZzFOelFzTVRRdU1UQTVOVEV5TnlCRE5qQXVOekl6TXpRME9Dd3hNaTR5T1RnM09ETTJJRFU0TGpBd05qazVPRFVzTnk0NU16WTFNVE0yT0NBMU9DNHlOek00TXpJM0xETXVNalUwTWpFNU9UZ2dRelU0TGpNMk1UWXlORElzTVM0M09ESTFORE14TVNBMU55NHlPRFUyTXpjNUxEQXVOVEF6TnpRMU5ESTRJRFUxTGpneE9URXpNRGtzTUM0ek16STVNakU1TXlCRE5USXVNRGd6T0RnME5Dd3RNQzR3T1RrMU5ESTJNakkwSURRNExqTXhOVGMzTURFc0xUQXVNVEV5TURnME1EazBJRFEwTGpVMk9UY3hNVGtzTUM0ek1ETTFNVFF6TkNCRE5ETXVNVEl4T0RBeE1Td3dMalEyTXpVeU5qSXlOQ0EwTWk0d05EWTJOems0TERFdU56RXlNRFV4TXprZ05ESXVNRGswTmpnMExETXVNVFkxTVRNeU1qZ2dRelF5TGpJMU5qZzJNRFFzTnk0NE1ERTFPRFEzTkNBek9TNDFNRGs0TURnMkxERXlMakE0TmpnM05pQXpOUzR5TkRjNE1UTXlMREV6TGpnek1qY3pOVFFnUXpNeExqRTJNRFV6TlRnc01UVXVOVEF5TkRneElESTFMamcwTkRFM056Y3NNVFF1TWpnMU1Ea3pNeUF5TWk0NE56QXdOemtzTVRFdU1ERXpORGs1SUVNeU1TNDRPRGN3TnpNNUxEa3VPVE0xTnprM016RWdNakF1TWpRek1qVTBMRGt1T0RBek5EWXpNVFlnTVRrdU1EazJOemMxTVN3eE1DNDJPVGN6TmpjMElFTXhOaTR4TURBMk1qQTBMREV6TGpBME9EWTNOeklnTVRNdU16YzFOakkwTnl3eE5TNDNOREEzTmprZ01URXVNREE0TWpneE9Td3hPQzQyT1RRMU1ERTVJRU14TUM0d09EVTRNakkyTERFNUxqZzBNalk1TlRNZ01UQXVNakl5TURVd09Dd3lNUzQxTURZNE1UZzVJREV4TGpNd05qSTFOQ3d5TWk0ME9UTXlOekExSUVNeE5DNDNPRGN5TURjNUxESTFMalkwTlRVd05EWWdNVFV1T1RBNU5EWTROU3d6TUM0Mk5UYzNOamc0SURFMExqRXdNakUzTkRrc016UXVPVFk1TkRRd05DQkRNVEl1TXpjMk5qRTRNU3d6T1M0d09EQXdNVFU1SURndU1UQTROVFk0TVRNc05ERXVOekkzT1RrMk5DQXpMakl5TWprMU1EUTJMRFF4TGpjeU56azVOalFnUXpFdU5qTTNOVEUwTVRFc05ERXVOamMyT1RZMU5pQXdMalV3T1RFNU9Ea3pOU3cwTWk0M05ESXhNalU0SURBdU16TTBNRFE0TkRNNUxEUTBMakU0TXprMk1qWWdReTB3TGpFd05UTTBNVFEwT1N3ME55NDVNemt3TlRJeklDMHdMakV4TURBNU9EWXlNeXcxTVM0M05qY3lNamcxSURBdU16RXlPRFUzTXpreExEVTFMalUxTXpBeU16SWdRekF1TkRjd056QTVNRGN6TERVMkxqazJORFU0TnpVZ01pNHhOVGcyTkRBNUxEVTRMakF4TWpnNE1UWWdNeTQxT1RFNE5EYzJOeXcxT0M0d01USTRPREUySUVNM0xqazBOamd5TkRJeUxEVTNMamt3TWpFM01EWWdNVEl1TVRJMU16VXlPU3cyTUM0MU9UWTBNalE0SURFekxqZzRNRGMxTURFc05qUXVPRFl6TlRVeU5TQkRNVFV1TmpJM05EazNPQ3cyT1M0eE1qVTBPVEEzSURFMExqVXdNekEzTkRrc056UXVNRGt5TnpjNE5TQXhNUzR3T0RNNU5qUXlMRGMzTGpJeU9EVTNPU0JETVRBdU1ERTBORFkxTERjNExqSXhNVFUzTURrZ09TNDROemM0TURRek9DdzNPUzQ0TlRNMk16ZzRJREV3TGpjNE1EZ3dNalVzT0RBdU9UazBPVEV5T0NCRE1UTXVNVEF5TnpNMU9TdzRNeTQ1TlRReU5qYzNJREUxTGpjM01ESXhNekVzT0RZdU5qUTJNelU1TmlBeE9DNDJPRGt6T0Rnc09EZ3VPVGszTmpZNU15QkRNVGt1T0RNMU5ETTBOU3c0T1M0NU1qQTFORGczSURJeExqVXdNakUzTlRJc09Ea3VOemt4TWpReE9DQXlNaTQwT1RVMU5UazNMRGc0TGpZNU5qSTBNVFVnUXpJMUxqUTROek00T1RZc09EVXVNemczT0RnM055QXpNQzQ0TkRBd056VXpMRGcwTGpFMk16VTRNRFlnTXpRdU9UWXdNakl3TkN3NE5TNDRPVE13TURZeklFTXpPUzR5TnpZeU56UTJMRGczTGpZNU9EazNPRE1nTkRFdU9Ua3hNekl6Tml3NU1pNHdOakE0TVRVNElEUXhMamN5TmpJeE9USXNPVFl1TnpRME5EQTJPU0JETkRFdU5qTTVNamt5Tnl3NU9DNHlNVFl3T0RNM0lEUXlMamN4TnpnM016Z3NPVGt1TkRrNE56Y3pOaUEwTkM0eE56a3hPVEV4TERrNUxqWTJOVGN3TkRrZ1F6UTJMakE1TURjeE1ERXNPVGt1T0RnNU1qZzVNU0EwT0M0d01USXhOellzTVRBd0lEUTVMamt6T1RZNU5qUXNNVEF3SUVNMU1TNDNOamt3TkRZc01UQXdJRFV6TGpVNU9EZ3lPREVzT1RrdU9UQXdNVEF3TnlBMU5TNDBNamcyTVRBeUxEazVMalk1TmpRd09Ua2dRelUyTGpnM09ESTFNRGdzT1RrdU5UTTJNems0SURVM0xqazFNVFkwTWpNc09UZ3VNamcyTlRjMU5DQTFOeTQ1TURJM056TXhMRGsyTGpnek16QTJNakVnUXpVM0xqY3pOVFF3TnpFc09USXVNVGs0TnpjeE9TQTJNQzQwT0RnMU1UTTBMRGczTGpreE16QTBPRElnTmpRdU56UTFNekU1TWl3NE5pNHhOekEyTkRnMklFTTJPQzQ0TlRrNE5ESXlMRGcwTGpRNU1EQTVNVE1nTnpRdU1UVXlOREUwTlN3NE5TNDNNakF3TWpBMUlEYzNMakV5T0RJME16RXNPRGd1T1RnMk9EVTNOeUJETnpndU1URTJORE0zT0N3NU1DNHdOakl6T1RjeElEYzVMamMxTURNeE1Ea3NPVEF1TVRrek1EQXhOQ0E0TUM0NU1ERTFORGNzT0RrdU16QXlOVFUyT0NCRE9ETXVPRGt5TlRFeUxEZzJMamsxTnpNd01UWWdPRFl1TmpFeU16RTRNU3c0TkM0eU5qWTFNRGN4SURnNExqazVNREEwTURFc09ERXVNekEwT1RnNU9TQkRPRGt1T1RFek16WTBOQ3c0TUM0eE5UZzVOVGc0SURnNUxqYzRNak15TlRnc056Z3VORGt5TmpjeU9TQTRPQzQyT1RJd05qZ3hMRGMzTGpVd05EUTVNVFFnUXpnMUxqSXhNVGszT1RFc056UXVNelUwTkRFNU5pQTROQzR3T0RNMk5qTTVMRFk1TGpNek9UazVNekVnT0RVdU9Ea3dPVFUzTlN3Mk5TNHdNekkyTkRZeUlFTTROeTQxT0RrM01ERXhMRFl3TGprM056UXlOakVnT1RFdU5qazVNRE0wTlN3MU9DNHlOVFEyTWpreklEazJMakV4T0RnNE1UWXNOVGd1TWpVME5qSTVNeUJNT1RZdU56TTNNekUwTWl3MU9DNHlOekV3TmpJNUlFTTVPQzR4TnpJeU5UQTVMRFU0TGpNNE56TTVOVGtnT1RrdU5Ea3dPRFV6TERVM0xqSTRNalEwT0RrZ09Ua3VOalkwTWpjek5pdzFOUzQ0TVRnMU5UWTBJRU14TURBdU1UQTFPREkyTERVeUxqQTJNREF3TnlBeE1EQXVNVEV3TlRnekxEUTRMakl6TmpFMU5UUWdPVGt1TmpnMU9EazNNU3cwTkM0ME5Ea3dOak0wSUZvZ1RUUTVMams1T1Rnd09UY3NOemd1T0RJMU5qY3dOaUJETXpRdU1EYzVNamM0TXl3M09DNDRNalUyTnpBMklESXhMakUzTXprek1ESXNOalV1T1RJd05EazFPU0F5TVM0eE56TTVNekF5TERVd0xqQXdNRFl4TURnZ1F6SXhMakUzTXprek1ESXNNelF1TURnd056STFOeUF6TkM0d056azNNVEE0TERJeExqRTNOVFUxTVNBME9TNDVPVGs0TURrM0xESXhMakUzTlRVMU1TQkROalV1T1RFNU9UQTROeXd5TVM0eE56VTFOVEVnTnpndU9ESTFOamc1TWl3ek5DNHdPREEzTWpVM0lEYzRMamd5TlRZNE9USXNOVEF1TURBd05qRXdPQ0JETnpndU9ESTFOamc1TWl3MU5TNDBNRFF5TlRVMElEYzNMak16TlRneU9EZ3NOakF1TkRVNE5EWTROaUEzTkM0M05EZ3pOVGczTERZMExqYzRNRFV4T1RNZ1REWXlMakV5TmpJM09EY3NOVEl1TVRVNE1UYzJOU0JETmpNdU1EUXdNRGc0Tml3MU1DNHdNRE0yTXpneElEWXpMalV5TWpjeU5UVXNORGN1TmpZM09EazNJRFl6TGpVeU1qSTVNeXcwTlM0eU5UY3pNemsySUVNMk15NDFNakl5T1RNc05EQXVOVE0yT1RnNUlEWXhMalk0TXpnMk1UVXNNell1TURrNU5EY3dNaUExT0M0ek5EVTJNakk0TERNeUxqYzJNakUwTVRNZ1F6VTFMakF3T0RJME9Td3lPUzQwTWpRNE1USXpJRFV3TGpVM01EWTNNRFlzTWpjdU5UZzJPRE00SURRMUxqZzFNVEV5TVRZc01qY3VOVGcyT0RNNElFTTBOQzR5TnpZd05qUTFMREkzTGpVNE5qZ3pPQ0EwTWk0M01EZ3pOVGswTERJM0xqYzVOakUxTURnZ05ERXVNVGt4TmpnMU9Td3lPQzR5TURreE5UUTFJRU0wTUM0MU1qYzBNVEUwTERJNExqTTVNRE0xTnpFZ016a3VPVGcwTWpJNE5pd3lPQzQ1TXpjNE5UY3pJRE01TGpnd056TTBPRElzTWprdU5qQXpOREl3TWlCRE16a3VOakkyTlRjMU5pd3pNQzR5T0RReE1UazBJRE01TGpnek1ESTJPVElzTXpBdU9UZ3hOamcwTnlBME1DNHpOakl5TURjM0xETXhMalV4TkRBME9EWWdRelF3TGpNMk1qSXdOemNzTXpFdU5URTBNRFE0TmlBME5pNDFPVE0yTnpNeUxETTNMamM1TXpRek16a2dORGd1TmpjNE5qRXlPQ3d6T1M0NE56YzVNVE1nUXpRNExqZzVOekF4TURNc05EQXVNRGsyTXpBM05pQTBPQzQ0T1RZMU56YzRMRFF3TGpZeE56UXlOelFnTkRndU9EWTFPRGN5TkN3ME1DNDRNRFV4TVRjZ1REUTRMamcwTmpReE1UTXNOREF1T1RReU1qQTRNeUJETkRndU5qTTJNak13Tnl3ME15NHlNelF5TnpBMElEUTRMakl6TVRBd05pdzBOUzQ1T0RVMk1EazVJRFEzTGpnNU5qY3dOalFzTkRjdU1EUXlPVGcxTnlCRE5EY3VPRFV4TnpJNU5DdzBOeTR3T0RjMU1qazJJRFEzTGpnd09UTTBOelFzTkRjdU1USTFNVFUwSURRM0xqYzJNelV3TlRVc05EY3VNVGN3T1RrMU1pQkRORGN1TnpFMU5UQXhNeXcwTnk0eU1UZzVPVGc0SURRM0xqWTNNVE00T1RNc05EY3VNalkxTWpjeU5TQTBOeTQyTWpVeE1UVXNORGN1TXpFeU9EUXpOaUJETkRZdU5UVXpPRGcxT1N3ME55NDJOVFkyTlRJNUlEUXpMamMyTURFeU56UXNORGd1TURZMk5qSTVNeUEwTVM0ME16RTNNRFk1TERRNExqSTNOVEEzTnpJZ1REUXhMalF6TWpFek9UUXNORGd1TWpZeU5UTTFPQ0JNTkRFdU16STNORGd4Tml3ME9DNHlPRGc1TVRZeElFTTBNUzR6TURnNE9EVXpMRFE0TGpJNU1UQTNPRFFnTkRFdU1qYzBNamczTnl3ME9DNHlPVE0yTnpNeUlEUXhMakl5T0RRME5Ua3NORGd1TWprek5qY3pNaUJETkRBdU9UYzJOelE0TVN3ME9DNHlPVE0yTnpNeUlEUXdMall3TmpVMU16VXNORGd1TWpJek1UZ3hOU0EwTUM0eU56QXdPVEUxTERRM0xqZzROekUxTmpVZ1F6TTRMakE1T1RrMU5UTXNORFV1TnpFM01EUTVOQ0F6TWk0eE1USTRNelUyTERNNUxqYzNNamd5TkRJZ016SXVNVEV5T0RNMU5pd3pPUzQzTnpJNE1qUXlJRU16TVM0MU56VTNNRGMwTERNNUxqSXpOelF6TXlBek1TNHdNalEzTkRBeExETTVMakV5TkRrNU1qTWdNekF1TmpVM05UY3lPQ3d6T1M0eE1qUTVPVEl6SUVNeU9TNDRNREUzTVRRc016a3VNVEkwT1RreU15QXlPUzR3TXpVek56WTFMRE01TGpjME16UXhOallnTWpndU56azBNRFU0TERRd0xqWXpNRFF3TVRRZ1F6STNMakUwTlRreE16VXNORFl1TnpJNU5EUTRPU0F5T0M0NE9UTXdPVE0zTERVekxqSTRPVGt6TmpJZ016TXVNelUwT0Rrd05DdzFOeTQzTlRJeE1EVTBJRU16Tmk0Mk9UTXhNamt5TERZeExqQTRPVGcyTmprZ05ERXVNVE14TVRRc05qSXVPVEkzT0RReE1pQTBOUzQ0TlRFMU5UUXNOakl1T1RJM09EUXhNaUJETkRndU1qWXlNVFF6T0N3Mk1pNDVNamM0TkRFeUlEVXdMalU1TnpreE5qSXNOakl1TkRRMU5qUXpNaUExTWk0M05USXdOVEV4TERZeExqVXpNVGcwTlRZZ1REWTFMalV4TVRJeU5ESXNOelF1TWprd09EUTNNeUJETmpFdU1ETXhOamsyTWl3M055NHhOVGN5TWpJMElEVTFMamN4TWpNeE1EY3NOemd1T0RJMU5qY3dOaUEwT1M0NU9UazRNRGszTERjNExqZ3lOVFkzTURZZ1dpSWdhV1E5SXVXOW91ZUt0aUkrUEM5d1lYUm9QZ29nSUNBZ0lDQWdJRHd2Wno0S0lDQWdJRHd2Wno0S1BDOXpkbWMrPC9jbTpDb250ZW50PgoJCTwvY206UmVzb3VyY2U+Cgk8L2NtOkZ1bmN0aW9uQmxvY2s+CjwvY206Q0lNST4=",
                "codeBase64": ""
            },
            {
                "type": "Device",
                "name": "TorqueWrench.Atlas.PF4000",
                "definitionBase64": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLQpDb21tb24gUnVudGltZS1FbmdpbmVlcmluZyBFeGNoYW5nZSBNb2RlbCAoQ1JFRU0pCkNvcHlyaWdodCDCqSAyMDIxIFNpZW1lbnMgQUcuIEFkdmFudGEuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogKiBTaWVtZW5zIEFHLiBNSVQgTGljZW5zZSAxLjAKICoKICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24KICogb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24KICogZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dAogKiByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwKICogY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCiAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nCiAqIGNvbmRpdGlvbnM6CiAqIAogKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZQogKiBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsCiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUwogKiBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORAogKiBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVAogKiBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwKICogV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HCiAqIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKICogT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgotLT4KPGNtOkNJTUkgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgCiAgICAgICAgIHhtbG5zOmJzPSJodHRwOi8vY3JlZW0uc2llbWVucy5jb20vc2NoZW1hcy9iYXNlIiAKICAgICAgICAgeG1sbnM6Y2ltPSJodHRwOi8vY3JlZW0uc2llbWVucy5jb20vc2NoZW1hcy9jaW0iIAogICAgICAgICB4bWxuczpjbT0iaHR0cDovL2NyZWVtLnNpZW1lbnMuY29tL3NjaGVtYXMvY3JlZW0iCiAgICAgICAgIHhtbG5zPSJodHRwOi8vY3JlZW0uc2llbWVucy5jb20vc2NoZW1hcy9jcmVlbSIKICAgICAgICAgc3RhdGU9IkFscGhhIiB2ZXJzaW9uPSIwLjAuMSIgbGFuZz0iZW4tVVMiPgoKICAgIDxjbTpEZXZpY2VEZXNjcmlwdGlvbiBpZD0iVG9ycXVlV3JlbmNoLkF0bGFzLlBGNDAwMCI+CiAgICAgICAgPGNtOk1ldGFkYXRhPgogICAgICAgICAgICA8Y206TmFtZXNwYWNlPkNSRUVNLkRELntpZH08L2NtOk5hbWVzcGFjZT4KICAgICAgICAgICAgPGNtOk5hbWU+QXRsYXMuUEY0MDAwPC9jbTpOYW1lPgogICAgICAgICAgICA8Y206VmVyc2lvbj4xLjAuMDwvY206VmVyc2lvbj4KICAgICAgICAgICAgPGNtOkRlc2NyaXB0aW9uLz4KICAgICAgICAgICAgPGNtOlVVSUQvPgogICAgICAgICAgICA8Y206T3JnYW5pemF0aW9uLz4KICAgICAgICAgICAgPGNtOkNlcnRpZmljYXRpb24vPgogICAgICAgIDwvY206TWV0YWRhdGE+CgogICAgICAgIDxjbTpVSUluZm9ybWF0aW9uPgogICAgICAgICAgICA8Y206Q29udGVudCBsYW5nPSJlbi1VUyI+CiAgICAgICAgICAgICAgICA8Y206RGlzcGxheU5hbWU+UEY0MDAwPC9jbTpEaXNwbGF5TmFtZT4KICAgICAgICAgICAgICAgIDxjbTpEZXNjcmlwdGlvbj5BdGxhcyB0b3JxdWUgd3JlbmNoPC9jbTpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDxjbTpEZXZpY2VUeXBlIGlkPSJUb3JxdWVXcmVuY2giIGRpc3BsYXlOYW1lPSJUb3JxdWUgV3JlbmNoIi8+CiAgICAgICAgICAgICAgICA8Y206SWNvbiByZWY9IlJlc291cmNlLmRlZmF1bHRJY29uIi8+CiAgICAgICAgICAgIDwvY206Q29udGVudD4KICAgICAgICAgICAgPGNtOkNvbnRlbnQgbGFuZz0iemgtQ04iPgogICAgICAgICAgICAgICAgPGNtOkRpc3BsYXlOYW1lPlBGNDAwMDwvY206RGlzcGxheU5hbWU+CiAgICAgICAgICAgICAgICA8Y206RGVzY3JpcHRpb24+6Zi/54m55ouJ5pav5omt55+p5omz5omL5Y+K5o6n5Yi25ZmoPC9jbTpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDxjbTpEZXZpY2VUeXBlIGlkPSJUb3JxdWVXcmVuY2giIGRpc3BsYXlOYW1lPSLmia3nn6nmibPmiYsiLz4KICAgICAgICAgICAgPC9jbTpDb250ZW50PgogICAgICAgIDwvY206VUlJbmZvcm1hdGlvbj4KCiAgICAgICAgPGNtOkRhdGE+CiAgICAgICAgICAgIDxjbTpDb250ZW50PgogICAgICAgICAgICAgICAgPGNtOkRldmljZVR5cGUgaWQ9IlRvcnF1ZVdyZW5jaCIvPgogICAgICAgICAgICAgICAgPGNtOlBhcmVudD4KICAgICAgICAgICAgICAgICAgICA8Y206Q29tbXVuaWNhdGlvbiByZWY9IkV0aGVybmV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmFtZXRlcnM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJpcEFkZHJlc3MiIGRlZmF1bHRWYWx1ZT0iMTkyLjE2OC4xLjk4Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFBvcnQgbnVtYmVyIHNoYWxsIGJlIGluIHJhbmdlIDEwMjV+NjU1MzUsIFJGQyAzMjMyIDw9IDEwMjQgaXMgbm90IGFsbG93ZWQgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJwb3J0TnVtYmVyIiBkZWZhdWx0VmFsdWU9IjQ1NDUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpQYXJhbWV0ZXJzPgogICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgIDwvY206UGFyZW50PgogICAgICAgICAgICAgICAgPGNtOkNoaWxkcmVuLz4KICAgICAgICAgICAgPC9jbTpDb250ZW50PgogICAgICAgIDwvY206RGF0YT4KCiAgICAgICAgPGNtOlJlc291cmNlPgogICAgICAgICAgICA8Y206Q29udGVudCBpZD0iZGVmYXVsdEljb24iIHR5cGU9Ikljb24iIGZvcm1hdD0iU1ZHIj48L2NtOkNvbnRlbnQ+CiAgICAgICAgPC9jbTpSZXNvdXJjZT4KICAgIDwvY206RGV2aWNlRGVzY3JpcHRpb24+CjwvY206Q0lNST4="
            }
        ]
    }
}